// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  password_hash String
  profile       Profile   @default(Deliverer)
  active        Boolean   @default(false)
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt @default(now())
  Vehicle       Vehicle[]
  Freight       Freight[]
  Requests      Request[]
}

model Vehicle {
  id         String   @id @default(uuid())
  user_id    String
  User       User     @relation(fields: [user_id], references: [id])
  name       String
  plate      String   @unique
  year       Int
  type       Type     @default(Caminhonete)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
}

model Freight {
  id               String        @id @default(uuid())
  company_id       String
  User             User          @relation(fields: [company_id], references: [id])
  distance         Int?
  value            Float?
  fee              Float?
  status           StatusFreight @default(Disponivel)
  posted_at        DateTime      @default(now())
  updated_at       DateTime      @updatedAt
  can_value_change Boolean       @default(true)
  Request          Request[]
}

model Request {
  id           String        @id @default(uuid())
  deliverer_id String
  User         User          @relation(fields: [deliverer_id], references: [id])
  freight_id   String
  Freight      Freight       @relation(fields: [freight_id], references: [id])
  Status       StatusRequest @default(Pendente)
  requested_at DateTime      @default(now())
  updated_at   DateTime      @updatedAt
}

enum Profile {
  Deliverer
  Company
}

enum Type {
  Caminhonete
  Furgao
  Caminhao
}

enum StatusFreight {
  Disponivel
  Em_andamento
  Entregue
}

enum StatusRequest {
  Pendente
  Aceito
  Rejeitado
}
